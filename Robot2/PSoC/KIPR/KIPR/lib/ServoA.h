//*****************************************************************************
//*****************************************************************************
//  FILENAME: ServoA.h
//   Version: 2.5, Updated on 2015/3/4 at 22:26:51
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: PWM16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef ServoA_INCLUDE
#define ServoA_INCLUDE

#include <m8c.h>

#pragma fastcall16 ServoA_EnableInt
#pragma fastcall16 ServoA_DisableInt
#pragma fastcall16 ServoA_Start
#pragma fastcall16 ServoA_Stop
#pragma fastcall16 ServoA_wReadCounter              // Read  DR0
#pragma fastcall16 ServoA_WritePeriod               // Write DR1
#pragma fastcall16 ServoA_wReadPulseWidth           // Read  DR2
#pragma fastcall16 ServoA_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wServoA_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 wServoA_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the ServoA API.
//-------------------------------------------------

extern void ServoA_EnableInt(void);                  // Proxy Class 1
extern void ServoA_DisableInt(void);                 // Proxy Class 1
extern void ServoA_Start(void);                      // Proxy Class 1
extern void ServoA_Stop(void);                       // Proxy Class 1
extern WORD ServoA_wReadCounter(void);               // Proxy Class 2
extern void ServoA_WritePeriod(WORD wPeriod);        // Proxy Class 1
extern WORD ServoA_wReadPulseWidth(void);            // Proxy Class 1
extern void ServoA_WritePulseWidth(WORD wPulseWidth);// Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wServoA_ReadCounter(void);            // Deprecated
extern WORD wServoA_ReadPulseWidth(void);         // Deprecated


//-------------------------------------------------
// Constants for ServoA API's.
//-------------------------------------------------

#define ServoA_CONTROL_REG_START_BIT           ( 0x01 )
#define ServoA_INT_REG_ADDR                    ( 0x0e1 )
#define ServoA_INT_MASK                        ( 0x04 )


//--------------------------------------------------
// Constants for ServoA user defined values
//--------------------------------------------------

#define ServoA_PERIOD                          ( 0x4e1f )
#define ServoA_PULSE_WIDTH                     ( 0x3e7 )


//-------------------------------------------------
// Register Addresses for ServoA
//-------------------------------------------------

#pragma ioport  ServoA_COUNTER_LSB_REG: 0x024              //DR0 Count register LSB
BYTE            ServoA_COUNTER_LSB_REG;
#pragma ioport  ServoA_COUNTER_MSB_REG: 0x028              //DR0 Count register MSB
BYTE            ServoA_COUNTER_MSB_REG;
#pragma ioport  ServoA_PERIOD_LSB_REG:  0x025              //DR1 Period register LSB
BYTE            ServoA_PERIOD_LSB_REG;
#pragma ioport  ServoA_PERIOD_MSB_REG:  0x029              //DR1 Period register MSB
BYTE            ServoA_PERIOD_MSB_REG;
#pragma ioport  ServoA_COMPARE_LSB_REG: 0x026              //DR2 Compare register LSB
BYTE            ServoA_COMPARE_LSB_REG;
#pragma ioport  ServoA_COMPARE_MSB_REG: 0x02a              //DR2 Compare register MSB
BYTE            ServoA_COMPARE_MSB_REG;
#pragma ioport  ServoA_CONTROL_LSB_REG: 0x027              //Control register LSB
BYTE            ServoA_CONTROL_LSB_REG;
#pragma ioport  ServoA_CONTROL_MSB_REG: 0x02b              //Control register MSB
BYTE            ServoA_CONTROL_MSB_REG;
#pragma ioport  ServoA_FUNC_LSB_REG:    0x124              //Function register LSB
BYTE            ServoA_FUNC_LSB_REG;
#pragma ioport  ServoA_FUNC_MSB_REG:    0x128              //Function register MSB
BYTE            ServoA_FUNC_MSB_REG;
#pragma ioport  ServoA_INPUT_LSB_REG:   0x125              //Input register LSB
BYTE            ServoA_INPUT_LSB_REG;
#pragma ioport  ServoA_INPUT_MSB_REG:   0x129              //Input register MSB
BYTE            ServoA_INPUT_MSB_REG;
#pragma ioport  ServoA_OUTPUT_LSB_REG:  0x126              //Output register LSB
BYTE            ServoA_OUTPUT_LSB_REG;
#pragma ioport  ServoA_OUTPUT_MSB_REG:  0x12a              //Output register MSB
BYTE            ServoA_OUTPUT_MSB_REG;
#pragma ioport  ServoA_INT_REG:       0x0e1                //Interrupt Mask Register
BYTE            ServoA_INT_REG;


//-------------------------------------------------
// ServoA Macro 'Functions'
//-------------------------------------------------

#define ServoA_Start_M \
   ( ServoA_CONTROL_LSB_REG |=  ServoA_CONTROL_REG_START_BIT )

#define ServoA_Stop_M  \
   ( ServoA_CONTROL_LSB_REG &= ~ServoA_CONTROL_REG_START_BIT )

#define ServoA_EnableInt_M   \
   M8C_EnableIntMask(  ServoA_INT_REG, ServoA_INT_MASK )

#define ServoA_DisableInt_M  \
   M8C_DisableIntMask( ServoA_INT_REG, ServoA_INT_MASK )

#endif
// end of file ServoA.h
