//*****************************************************************************
//*****************************************************************************
//  FILENAME: PWMA.h
//   Version: 2.60, Updated on 2015/3/4 at 22:26:52
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: PWM8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef PWMA_INCLUDE
#define PWMA_INCLUDE

#include <m8c.h>

#pragma fastcall16 PWMA_EnableInt
#pragma fastcall16 PWMA_DisableInt
#pragma fastcall16 PWMA_Start
#pragma fastcall16 PWMA_Stop
#pragma fastcall16 PWMA_bReadCounter              // Read  DR0
#pragma fastcall16 PWMA_WritePeriod               // Write DR1
#pragma fastcall16 PWMA_bReadPulseWidth           // Read  DR2
#pragma fastcall16 PWMA_WritePulseWidth           // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bPWMA_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 bPWMA_ReadPulseWidth           // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the PWMA API.
//-------------------------------------------------

extern void PWMA_EnableInt(void);                        // Proxy Class 1
extern void PWMA_DisableInt(void);                       // Proxy Class 1
extern void PWMA_Start(void);                            // Proxy Class 1
extern void PWMA_Stop(void);                             // Proxy Class 1
extern BYTE PWMA_bReadCounter(void);                     // Proxy Class 2
extern void PWMA_WritePeriod(BYTE bPeriod);              // Proxy Class 1
extern BYTE PWMA_bReadPulseWidth(void);                  // Proxy Class 1
extern void PWMA_WritePulseWidth(BYTE bPulseWidth);      // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bPWMA_ReadCounter(void);            // Deprecated
extern BYTE bPWMA_ReadPulseWidth(void);         // Deprecated


//--------------------------------------------------
// Constants for PWMA API's.
//--------------------------------------------------

#define PWMA_CONTROL_REG_START_BIT             ( 0x01 )
#define PWMA_INT_REG_ADDR                      ( 0x0e1 )
#define PWMA_INT_MASK                          ( 0x08 )


//--------------------------------------------------
// Constants for PWMA user defined values
//--------------------------------------------------

#define PWMA_PERIOD                            ( 0xff )
#define PWMA_PULSE_WIDTH                       ( 0x00 )


//-------------------------------------------------
// Register Addresses for PWMA
//-------------------------------------------------

#pragma ioport  PWMA_COUNTER_REG:   0x02c                  //DR0 Count register
BYTE            PWMA_COUNTER_REG;
#pragma ioport  PWMA_PERIOD_REG:    0x02d                  //DR1 Period register
BYTE            PWMA_PERIOD_REG;
#pragma ioport  PWMA_COMPARE_REG:   0x02e                  //DR2 Compare register
BYTE            PWMA_COMPARE_REG;
#pragma ioport  PWMA_CONTROL_REG:   0x02f                  //Control register
BYTE            PWMA_CONTROL_REG;
#pragma ioport  PWMA_FUNC_REG:  0x12c                      //Function register
BYTE            PWMA_FUNC_REG;
#pragma ioport  PWMA_INPUT_REG: 0x12d                      //Input register
BYTE            PWMA_INPUT_REG;
#pragma ioport  PWMA_OUTPUT_REG:    0x12e                  //Output register
BYTE            PWMA_OUTPUT_REG;
#pragma ioport  PWMA_INT_REG:       0x0e1                  //Interrupt Mask Register
BYTE            PWMA_INT_REG;


//-------------------------------------------------
// PWMA Macro 'Functions'
//-------------------------------------------------

#define PWMA_Start_M \
   PWMA_CONTROL_REG |=  PWMA_CONTROL_REG_START_BIT

#define PWMA_Stop_M  \
   PWMA_CONTROL_REG &= ~PWMA_CONTROL_REG_START_BIT

#define PWMA_EnableInt_M   \
   M8C_EnableIntMask(PWMA_INT_REG, PWMA_INT_MASK)

#define PWMA_DisableInt_M  \
   M8C_DisableIntMask(PWMA_INT_REG, PWMA_INT_MASK)

#endif
// end of file PWMA.h
