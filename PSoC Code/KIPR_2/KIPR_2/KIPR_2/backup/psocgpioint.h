/******************************************************************************
*  Generated by PSoC Designer 5.4.3191
******************************************************************************/
#include <m8c.h>
/*
*   PSoCGPIOINT.h
*   Data: 04 June, 2002
*   Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
*
*  This file is generated by the Device Editor on Application Generation.
*  It contains equates that are useful in writing code relating to GPIO
*  related values.
*  
*  DO NOT EDIT THIS FILE MANUALLY, AS IT IS OVERWRITTEN!!!
*  Edits to this file will not be preserved.
*/
// ENC2A address and mask defines
#pragma	ioport	ENC2A_Data_ADDR:	0x8
BYTE			ENC2A_Data_ADDR;
#pragma	ioport	ENC2A_DriveMode_0_ADDR:	0x108
BYTE			ENC2A_DriveMode_0_ADDR;
#pragma	ioport	ENC2A_DriveMode_1_ADDR:	0x109
BYTE			ENC2A_DriveMode_1_ADDR;
#pragma	ioport	ENC2A_DriveMode_2_ADDR:	0xb
BYTE			ENC2A_DriveMode_2_ADDR;
#pragma	ioport	ENC2A_GlobalSelect_ADDR:	0xa
BYTE			ENC2A_GlobalSelect_ADDR;
#pragma	ioport	ENC2A_IntCtrl_0_ADDR:	0x10a
BYTE			ENC2A_IntCtrl_0_ADDR;
#pragma	ioport	ENC2A_IntCtrl_1_ADDR:	0x10b
BYTE			ENC2A_IntCtrl_1_ADDR;
#pragma	ioport	ENC2A_IntEn_ADDR:	0x9
BYTE			ENC2A_IntEn_ADDR;
#define ENC2A_MASK 0x20
// ENC2B address and mask defines
#pragma	ioport	ENC2B_Data_ADDR:	0x8
BYTE			ENC2B_Data_ADDR;
#pragma	ioport	ENC2B_DriveMode_0_ADDR:	0x108
BYTE			ENC2B_DriveMode_0_ADDR;
#pragma	ioport	ENC2B_DriveMode_1_ADDR:	0x109
BYTE			ENC2B_DriveMode_1_ADDR;
#pragma	ioport	ENC2B_DriveMode_2_ADDR:	0xb
BYTE			ENC2B_DriveMode_2_ADDR;
#pragma	ioport	ENC2B_GlobalSelect_ADDR:	0xa
BYTE			ENC2B_GlobalSelect_ADDR;
#pragma	ioport	ENC2B_IntCtrl_0_ADDR:	0x10a
BYTE			ENC2B_IntCtrl_0_ADDR;
#pragma	ioport	ENC2B_IntCtrl_1_ADDR:	0x10b
BYTE			ENC2B_IntCtrl_1_ADDR;
#pragma	ioport	ENC2B_IntEn_ADDR:	0x9
BYTE			ENC2B_IntEn_ADDR;
#define ENC2B_MASK 0x8
// MISC3 address and mask defines
#pragma	ioport	MISC3_Data_ADDR:	0x0
BYTE			MISC3_Data_ADDR;
#pragma	ioport	MISC3_DriveMode_0_ADDR:	0x100
BYTE			MISC3_DriveMode_0_ADDR;
#pragma	ioport	MISC3_DriveMode_1_ADDR:	0x101
BYTE			MISC3_DriveMode_1_ADDR;
#pragma	ioport	MISC3_DriveMode_2_ADDR:	0x3
BYTE			MISC3_DriveMode_2_ADDR;
#pragma	ioport	MISC3_GlobalSelect_ADDR:	0x2
BYTE			MISC3_GlobalSelect_ADDR;
#pragma	ioport	MISC3_IntCtrl_0_ADDR:	0x102
BYTE			MISC3_IntCtrl_0_ADDR;
#pragma	ioport	MISC3_IntCtrl_1_ADDR:	0x103
BYTE			MISC3_IntCtrl_1_ADDR;
#pragma	ioport	MISC3_IntEn_ADDR:	0x1
BYTE			MISC3_IntEn_ADDR;
#define MISC3_MASK 0x1
// TX address and mask defines
#pragma	ioport	TX_Data_ADDR:	0x0
BYTE			TX_Data_ADDR;
#pragma	ioport	TX_DriveMode_0_ADDR:	0x100
BYTE			TX_DriveMode_0_ADDR;
#pragma	ioport	TX_DriveMode_1_ADDR:	0x101
BYTE			TX_DriveMode_1_ADDR;
#pragma	ioport	TX_DriveMode_2_ADDR:	0x3
BYTE			TX_DriveMode_2_ADDR;
#pragma	ioport	TX_GlobalSelect_ADDR:	0x2
BYTE			TX_GlobalSelect_ADDR;
#pragma	ioport	TX_IntCtrl_0_ADDR:	0x102
BYTE			TX_IntCtrl_0_ADDR;
#pragma	ioport	TX_IntCtrl_1_ADDR:	0x103
BYTE			TX_IntCtrl_1_ADDR;
#pragma	ioport	TX_IntEn_ADDR:	0x1
BYTE			TX_IntEn_ADDR;
#define TX_MASK 0x2
// MISC4 address and mask defines
#pragma	ioport	MISC4_Data_ADDR:	0x0
BYTE			MISC4_Data_ADDR;
#pragma	ioport	MISC4_DriveMode_0_ADDR:	0x100
BYTE			MISC4_DriveMode_0_ADDR;
#pragma	ioport	MISC4_DriveMode_1_ADDR:	0x101
BYTE			MISC4_DriveMode_1_ADDR;
#pragma	ioport	MISC4_DriveMode_2_ADDR:	0x3
BYTE			MISC4_DriveMode_2_ADDR;
#pragma	ioport	MISC4_GlobalSelect_ADDR:	0x2
BYTE			MISC4_GlobalSelect_ADDR;
#pragma	ioport	MISC4_IntCtrl_0_ADDR:	0x102
BYTE			MISC4_IntCtrl_0_ADDR;
#pragma	ioport	MISC4_IntCtrl_1_ADDR:	0x103
BYTE			MISC4_IntCtrl_1_ADDR;
#pragma	ioport	MISC4_IntEn_ADDR:	0x1
BYTE			MISC4_IntEn_ADDR;
#define MISC4_MASK 0x4
// MISC0 address and mask defines
#pragma	ioport	MISC0_Data_ADDR:	0x0
BYTE			MISC0_Data_ADDR;
#pragma	ioport	MISC0_DriveMode_0_ADDR:	0x100
BYTE			MISC0_DriveMode_0_ADDR;
#pragma	ioport	MISC0_DriveMode_1_ADDR:	0x101
BYTE			MISC0_DriveMode_1_ADDR;
#pragma	ioport	MISC0_DriveMode_2_ADDR:	0x3
BYTE			MISC0_DriveMode_2_ADDR;
#pragma	ioport	MISC0_GlobalSelect_ADDR:	0x2
BYTE			MISC0_GlobalSelect_ADDR;
#pragma	ioport	MISC0_IntCtrl_0_ADDR:	0x102
BYTE			MISC0_IntCtrl_0_ADDR;
#pragma	ioport	MISC0_IntCtrl_1_ADDR:	0x103
BYTE			MISC0_IntCtrl_1_ADDR;
#pragma	ioport	MISC0_IntEn_ADDR:	0x1
BYTE			MISC0_IntEn_ADDR;
#define MISC0_MASK 0x8
// MISC5 address and mask defines
#pragma	ioport	MISC5_Data_ADDR:	0x0
BYTE			MISC5_Data_ADDR;
#pragma	ioport	MISC5_DriveMode_0_ADDR:	0x100
BYTE			MISC5_DriveMode_0_ADDR;
#pragma	ioport	MISC5_DriveMode_1_ADDR:	0x101
BYTE			MISC5_DriveMode_1_ADDR;
#pragma	ioport	MISC5_DriveMode_2_ADDR:	0x3
BYTE			MISC5_DriveMode_2_ADDR;
#pragma	ioport	MISC5_GlobalSelect_ADDR:	0x2
BYTE			MISC5_GlobalSelect_ADDR;
#pragma	ioport	MISC5_IntCtrl_0_ADDR:	0x102
BYTE			MISC5_IntCtrl_0_ADDR;
#pragma	ioport	MISC5_IntCtrl_1_ADDR:	0x103
BYTE			MISC5_IntCtrl_1_ADDR;
#pragma	ioport	MISC5_IntEn_ADDR:	0x1
BYTE			MISC5_IntEn_ADDR;
#define MISC5_MASK 0x10
// MISC1 address and mask defines
#pragma	ioport	MISC1_Data_ADDR:	0x0
BYTE			MISC1_Data_ADDR;
#pragma	ioport	MISC1_DriveMode_0_ADDR:	0x100
BYTE			MISC1_DriveMode_0_ADDR;
#pragma	ioport	MISC1_DriveMode_1_ADDR:	0x101
BYTE			MISC1_DriveMode_1_ADDR;
#pragma	ioport	MISC1_DriveMode_2_ADDR:	0x3
BYTE			MISC1_DriveMode_2_ADDR;
#pragma	ioport	MISC1_GlobalSelect_ADDR:	0x2
BYTE			MISC1_GlobalSelect_ADDR;
#pragma	ioport	MISC1_IntCtrl_0_ADDR:	0x102
BYTE			MISC1_IntCtrl_0_ADDR;
#pragma	ioport	MISC1_IntCtrl_1_ADDR:	0x103
BYTE			MISC1_IntCtrl_1_ADDR;
#pragma	ioport	MISC1_IntEn_ADDR:	0x1
BYTE			MISC1_IntEn_ADDR;
#define MISC1_MASK 0x20
// MISC6 address and mask defines
#pragma	ioport	MISC6_Data_ADDR:	0x0
BYTE			MISC6_Data_ADDR;
#pragma	ioport	MISC6_DriveMode_0_ADDR:	0x100
BYTE			MISC6_DriveMode_0_ADDR;
#pragma	ioport	MISC6_DriveMode_1_ADDR:	0x101
BYTE			MISC6_DriveMode_1_ADDR;
#pragma	ioport	MISC6_DriveMode_2_ADDR:	0x3
BYTE			MISC6_DriveMode_2_ADDR;
#pragma	ioport	MISC6_GlobalSelect_ADDR:	0x2
BYTE			MISC6_GlobalSelect_ADDR;
#pragma	ioport	MISC6_IntCtrl_0_ADDR:	0x102
BYTE			MISC6_IntCtrl_0_ADDR;
#pragma	ioport	MISC6_IntCtrl_1_ADDR:	0x103
BYTE			MISC6_IntCtrl_1_ADDR;
#pragma	ioport	MISC6_IntEn_ADDR:	0x1
BYTE			MISC6_IntEn_ADDR;
#define MISC6_MASK 0x40
// MISC2 address and mask defines
#pragma	ioport	MISC2_Data_ADDR:	0x0
BYTE			MISC2_Data_ADDR;
#pragma	ioport	MISC2_DriveMode_0_ADDR:	0x100
BYTE			MISC2_DriveMode_0_ADDR;
#pragma	ioport	MISC2_DriveMode_1_ADDR:	0x101
BYTE			MISC2_DriveMode_1_ADDR;
#pragma	ioport	MISC2_DriveMode_2_ADDR:	0x3
BYTE			MISC2_DriveMode_2_ADDR;
#pragma	ioport	MISC2_GlobalSelect_ADDR:	0x2
BYTE			MISC2_GlobalSelect_ADDR;
#pragma	ioport	MISC2_IntCtrl_0_ADDR:	0x102
BYTE			MISC2_IntCtrl_0_ADDR;
#pragma	ioport	MISC2_IntCtrl_1_ADDR:	0x103
BYTE			MISC2_IntCtrl_1_ADDR;
#pragma	ioport	MISC2_IntEn_ADDR:	0x1
BYTE			MISC2_IntEn_ADDR;
#define MISC2_MASK 0x80
// PSDA address and mask defines
#pragma	ioport	PSDA_Data_ADDR:	0x4
BYTE			PSDA_Data_ADDR;
#pragma	ioport	PSDA_DriveMode_0_ADDR:	0x104
BYTE			PSDA_DriveMode_0_ADDR;
#pragma	ioport	PSDA_DriveMode_1_ADDR:	0x105
BYTE			PSDA_DriveMode_1_ADDR;
#pragma	ioport	PSDA_DriveMode_2_ADDR:	0x7
BYTE			PSDA_DriveMode_2_ADDR;
#pragma	ioport	PSDA_GlobalSelect_ADDR:	0x6
BYTE			PSDA_GlobalSelect_ADDR;
#pragma	ioport	PSDA_IntCtrl_0_ADDR:	0x106
BYTE			PSDA_IntCtrl_0_ADDR;
#pragma	ioport	PSDA_IntCtrl_1_ADDR:	0x107
BYTE			PSDA_IntCtrl_1_ADDR;
#pragma	ioport	PSDA_IntEn_ADDR:	0x5
BYTE			PSDA_IntEn_ADDR;
#define PSDA_MASK 0x1
// PSCK address and mask defines
#pragma	ioport	PSCK_Data_ADDR:	0x4
BYTE			PSCK_Data_ADDR;
#pragma	ioport	PSCK_DriveMode_0_ADDR:	0x104
BYTE			PSCK_DriveMode_0_ADDR;
#pragma	ioport	PSCK_DriveMode_1_ADDR:	0x105
BYTE			PSCK_DriveMode_1_ADDR;
#pragma	ioport	PSCK_DriveMode_2_ADDR:	0x7
BYTE			PSCK_DriveMode_2_ADDR;
#pragma	ioport	PSCK_GlobalSelect_ADDR:	0x6
BYTE			PSCK_GlobalSelect_ADDR;
#pragma	ioport	PSCK_IntCtrl_0_ADDR:	0x106
BYTE			PSCK_IntCtrl_0_ADDR;
#pragma	ioport	PSCK_IntCtrl_1_ADDR:	0x107
BYTE			PSCK_IntCtrl_1_ADDR;
#pragma	ioport	PSCK_IntEn_ADDR:	0x5
BYTE			PSCK_IntEn_ADDR;
#define PSCK_MASK 0x2
// MISC7 address and mask defines
#pragma	ioport	MISC7_Data_ADDR:	0x4
BYTE			MISC7_Data_ADDR;
#pragma	ioport	MISC7_DriveMode_0_ADDR:	0x104
BYTE			MISC7_DriveMode_0_ADDR;
#pragma	ioport	MISC7_DriveMode_1_ADDR:	0x105
BYTE			MISC7_DriveMode_1_ADDR;
#pragma	ioport	MISC7_DriveMode_2_ADDR:	0x7
BYTE			MISC7_DriveMode_2_ADDR;
#pragma	ioport	MISC7_GlobalSelect_ADDR:	0x6
BYTE			MISC7_GlobalSelect_ADDR;
#pragma	ioport	MISC7_IntCtrl_0_ADDR:	0x106
BYTE			MISC7_IntCtrl_0_ADDR;
#pragma	ioport	MISC7_IntCtrl_1_ADDR:	0x107
BYTE			MISC7_IntCtrl_1_ADDR;
#pragma	ioport	MISC7_IntEn_ADDR:	0x5
BYTE			MISC7_IntEn_ADDR;
#define MISC7_MASK 0x4
// MISC8 address and mask defines
#pragma	ioport	MISC8_Data_ADDR:	0x4
BYTE			MISC8_Data_ADDR;
#pragma	ioport	MISC8_DriveMode_0_ADDR:	0x104
BYTE			MISC8_DriveMode_0_ADDR;
#pragma	ioport	MISC8_DriveMode_1_ADDR:	0x105
BYTE			MISC8_DriveMode_1_ADDR;
#pragma	ioport	MISC8_DriveMode_2_ADDR:	0x7
BYTE			MISC8_DriveMode_2_ADDR;
#pragma	ioport	MISC8_GlobalSelect_ADDR:	0x6
BYTE			MISC8_GlobalSelect_ADDR;
#pragma	ioport	MISC8_IntCtrl_0_ADDR:	0x106
BYTE			MISC8_IntCtrl_0_ADDR;
#pragma	ioport	MISC8_IntCtrl_1_ADDR:	0x107
BYTE			MISC8_IntCtrl_1_ADDR;
#pragma	ioport	MISC8_IntEn_ADDR:	0x5
BYTE			MISC8_IntEn_ADDR;
#define MISC8_MASK 0x8
// AIN1 address and mask defines
#pragma	ioport	AIN1_Data_ADDR:	0x4
BYTE			AIN1_Data_ADDR;
#pragma	ioport	AIN1_DriveMode_0_ADDR:	0x104
BYTE			AIN1_DriveMode_0_ADDR;
#pragma	ioport	AIN1_DriveMode_1_ADDR:	0x105
BYTE			AIN1_DriveMode_1_ADDR;
#pragma	ioport	AIN1_DriveMode_2_ADDR:	0x7
BYTE			AIN1_DriveMode_2_ADDR;
#pragma	ioport	AIN1_GlobalSelect_ADDR:	0x6
BYTE			AIN1_GlobalSelect_ADDR;
#pragma	ioport	AIN1_IntCtrl_0_ADDR:	0x106
BYTE			AIN1_IntCtrl_0_ADDR;
#pragma	ioport	AIN1_IntCtrl_1_ADDR:	0x107
BYTE			AIN1_IntCtrl_1_ADDR;
#pragma	ioport	AIN1_IntEn_ADDR:	0x5
BYTE			AIN1_IntEn_ADDR;
#define AIN1_MASK 0x10
// PWMB address and mask defines
#pragma	ioport	PWMB_Data_ADDR:	0x4
BYTE			PWMB_Data_ADDR;
#pragma	ioport	PWMB_DriveMode_0_ADDR:	0x104
BYTE			PWMB_DriveMode_0_ADDR;
#pragma	ioport	PWMB_DriveMode_1_ADDR:	0x105
BYTE			PWMB_DriveMode_1_ADDR;
#pragma	ioport	PWMB_DriveMode_2_ADDR:	0x7
BYTE			PWMB_DriveMode_2_ADDR;
#pragma	ioport	PWMB_GlobalSelect_ADDR:	0x6
BYTE			PWMB_GlobalSelect_ADDR;
#pragma	ioport	PWMB_IntCtrl_0_ADDR:	0x106
BYTE			PWMB_IntCtrl_0_ADDR;
#pragma	ioport	PWMB_IntCtrl_1_ADDR:	0x107
BYTE			PWMB_IntCtrl_1_ADDR;
#pragma	ioport	PWMB_IntEn_ADDR:	0x5
BYTE			PWMB_IntEn_ADDR;
#define PWMB_MASK 0x20
// AIN2 address and mask defines
#pragma	ioport	AIN2_Data_ADDR:	0x4
BYTE			AIN2_Data_ADDR;
#pragma	ioport	AIN2_DriveMode_0_ADDR:	0x104
BYTE			AIN2_DriveMode_0_ADDR;
#pragma	ioport	AIN2_DriveMode_1_ADDR:	0x105
BYTE			AIN2_DriveMode_1_ADDR;
#pragma	ioport	AIN2_DriveMode_2_ADDR:	0x7
BYTE			AIN2_DriveMode_2_ADDR;
#pragma	ioport	AIN2_GlobalSelect_ADDR:	0x6
BYTE			AIN2_GlobalSelect_ADDR;
#pragma	ioport	AIN2_IntCtrl_0_ADDR:	0x106
BYTE			AIN2_IntCtrl_0_ADDR;
#pragma	ioport	AIN2_IntCtrl_1_ADDR:	0x107
BYTE			AIN2_IntCtrl_1_ADDR;
#pragma	ioport	AIN2_IntEn_ADDR:	0x5
BYTE			AIN2_IntEn_ADDR;
#define AIN2_MASK 0x40
// BIN2 address and mask defines
#pragma	ioport	BIN2_Data_ADDR:	0x4
BYTE			BIN2_Data_ADDR;
#pragma	ioport	BIN2_DriveMode_0_ADDR:	0x104
BYTE			BIN2_DriveMode_0_ADDR;
#pragma	ioport	BIN2_DriveMode_1_ADDR:	0x105
BYTE			BIN2_DriveMode_1_ADDR;
#pragma	ioport	BIN2_DriveMode_2_ADDR:	0x7
BYTE			BIN2_DriveMode_2_ADDR;
#pragma	ioport	BIN2_GlobalSelect_ADDR:	0x6
BYTE			BIN2_GlobalSelect_ADDR;
#pragma	ioport	BIN2_IntCtrl_0_ADDR:	0x106
BYTE			BIN2_IntCtrl_0_ADDR;
#pragma	ioport	BIN2_IntCtrl_1_ADDR:	0x107
BYTE			BIN2_IntCtrl_1_ADDR;
#pragma	ioport	BIN2_IntEn_ADDR:	0x5
BYTE			BIN2_IntEn_ADDR;
#define BIN2_MASK 0x80
// PWMA address and mask defines
#pragma	ioport	PWMA_Data_ADDR:	0x8
BYTE			PWMA_Data_ADDR;
#pragma	ioport	PWMA_DriveMode_0_ADDR:	0x108
BYTE			PWMA_DriveMode_0_ADDR;
#pragma	ioport	PWMA_DriveMode_1_ADDR:	0x109
BYTE			PWMA_DriveMode_1_ADDR;
#pragma	ioport	PWMA_DriveMode_2_ADDR:	0xb
BYTE			PWMA_DriveMode_2_ADDR;
#pragma	ioport	PWMA_GlobalSelect_ADDR:	0xa
BYTE			PWMA_GlobalSelect_ADDR;
#pragma	ioport	PWMA_IntCtrl_0_ADDR:	0x10a
BYTE			PWMA_IntCtrl_0_ADDR;
#pragma	ioport	PWMA_IntCtrl_1_ADDR:	0x10b
BYTE			PWMA_IntCtrl_1_ADDR;
#pragma	ioport	PWMA_IntEn_ADDR:	0x9
BYTE			PWMA_IntEn_ADDR;
#define PWMA_MASK 0x1
// BIN1 address and mask defines
#pragma	ioport	BIN1_Data_ADDR:	0x8
BYTE			BIN1_Data_ADDR;
#pragma	ioport	BIN1_DriveMode_0_ADDR:	0x108
BYTE			BIN1_DriveMode_0_ADDR;
#pragma	ioport	BIN1_DriveMode_1_ADDR:	0x109
BYTE			BIN1_DriveMode_1_ADDR;
#pragma	ioport	BIN1_DriveMode_2_ADDR:	0xb
BYTE			BIN1_DriveMode_2_ADDR;
#pragma	ioport	BIN1_GlobalSelect_ADDR:	0xa
BYTE			BIN1_GlobalSelect_ADDR;
#pragma	ioport	BIN1_IntCtrl_0_ADDR:	0x10a
BYTE			BIN1_IntCtrl_0_ADDR;
#pragma	ioport	BIN1_IntCtrl_1_ADDR:	0x10b
BYTE			BIN1_IntCtrl_1_ADDR;
#pragma	ioport	BIN1_IntEn_ADDR:	0x9
BYTE			BIN1_IntEn_ADDR;
#define BIN1_MASK 0x2
// STDBY address and mask defines
#pragma	ioport	STDBY_Data_ADDR:	0x8
BYTE			STDBY_Data_ADDR;
#pragma	ioport	STDBY_DriveMode_0_ADDR:	0x108
BYTE			STDBY_DriveMode_0_ADDR;
#pragma	ioport	STDBY_DriveMode_1_ADDR:	0x109
BYTE			STDBY_DriveMode_1_ADDR;
#pragma	ioport	STDBY_DriveMode_2_ADDR:	0xb
BYTE			STDBY_DriveMode_2_ADDR;
#pragma	ioport	STDBY_GlobalSelect_ADDR:	0xa
BYTE			STDBY_GlobalSelect_ADDR;
#pragma	ioport	STDBY_IntCtrl_0_ADDR:	0x10a
BYTE			STDBY_IntCtrl_0_ADDR;
#pragma	ioport	STDBY_IntCtrl_1_ADDR:	0x10b
BYTE			STDBY_IntCtrl_1_ADDR;
#pragma	ioport	STDBY_IntEn_ADDR:	0x9
BYTE			STDBY_IntEn_ADDR;
#define STDBY_MASK 0x4
// ENC1B address and mask defines
#pragma	ioport	ENC1B_Data_ADDR:	0x8
BYTE			ENC1B_Data_ADDR;
#pragma	ioport	ENC1B_DriveMode_0_ADDR:	0x108
BYTE			ENC1B_DriveMode_0_ADDR;
#pragma	ioport	ENC1B_DriveMode_1_ADDR:	0x109
BYTE			ENC1B_DriveMode_1_ADDR;
#pragma	ioport	ENC1B_DriveMode_2_ADDR:	0xb
BYTE			ENC1B_DriveMode_2_ADDR;
#pragma	ioport	ENC1B_GlobalSelect_ADDR:	0xa
BYTE			ENC1B_GlobalSelect_ADDR;
#pragma	ioport	ENC1B_IntCtrl_0_ADDR:	0x10a
BYTE			ENC1B_IntCtrl_0_ADDR;
#pragma	ioport	ENC1B_IntCtrl_1_ADDR:	0x10b
BYTE			ENC1B_IntCtrl_1_ADDR;
#pragma	ioport	ENC1B_IntEn_ADDR:	0x9
BYTE			ENC1B_IntEn_ADDR;
#define ENC1B_MASK 0x10
// ENC1A address and mask defines
#pragma	ioport	ENC1A_Data_ADDR:	0x8
BYTE			ENC1A_Data_ADDR;
#pragma	ioport	ENC1A_DriveMode_0_ADDR:	0x108
BYTE			ENC1A_DriveMode_0_ADDR;
#pragma	ioport	ENC1A_DriveMode_1_ADDR:	0x109
BYTE			ENC1A_DriveMode_1_ADDR;
#pragma	ioport	ENC1A_DriveMode_2_ADDR:	0xb
BYTE			ENC1A_DriveMode_2_ADDR;
#pragma	ioport	ENC1A_GlobalSelect_ADDR:	0xa
BYTE			ENC1A_GlobalSelect_ADDR;
#pragma	ioport	ENC1A_IntCtrl_0_ADDR:	0x10a
BYTE			ENC1A_IntCtrl_0_ADDR;
#pragma	ioport	ENC1A_IntCtrl_1_ADDR:	0x10b
BYTE			ENC1A_IntCtrl_1_ADDR;
#pragma	ioport	ENC1A_IntEn_ADDR:	0x9
BYTE			ENC1A_IntEn_ADDR;
#define ENC1A_MASK 0x40
// RX address and mask defines
#pragma	ioport	RX_Data_ADDR:	0x8
BYTE			RX_Data_ADDR;
#pragma	ioport	RX_DriveMode_0_ADDR:	0x108
BYTE			RX_DriveMode_0_ADDR;
#pragma	ioport	RX_DriveMode_1_ADDR:	0x109
BYTE			RX_DriveMode_1_ADDR;
#pragma	ioport	RX_DriveMode_2_ADDR:	0xb
BYTE			RX_DriveMode_2_ADDR;
#pragma	ioport	RX_GlobalSelect_ADDR:	0xa
BYTE			RX_GlobalSelect_ADDR;
#pragma	ioport	RX_IntCtrl_0_ADDR:	0x10a
BYTE			RX_IntCtrl_0_ADDR;
#pragma	ioport	RX_IntCtrl_1_ADDR:	0x10b
BYTE			RX_IntCtrl_1_ADDR;
#pragma	ioport	RX_IntEn_ADDR:	0x9
BYTE			RX_IntEn_ADDR;
#define RX_MASK 0x80
